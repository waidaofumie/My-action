name: Build-V2ray
on:
  workflow_dispatch:
  schedule:
        - cron: 0 */4 * * *
jobs:
  build:
    strategy:
      matrix:
        # Include amd64 on all platforms.
        goos: [windows, freebsd, openbsd, linux, dragonfly, darwin]
        goarch: [amd64, 386]
        exclude:
          # Exclude i386 on darwin and dragonfly.
          - goarch: 386
            goos: dragonfly
          - goarch: 386
            goos: darwin
        include:
          # BEGIN Linux ARM 5 6 7
          - goos: linux
            goarch: arm
            goarm: 7
          - goos: linux
            goarch: arm
            goarm: 6
          - goos: linux
            goarch: arm
            goarm: 5
          # END Linux ARM 5 6 7
          # Windows ARM 7
          - goos: windows
            goarch: arm
            goarm: 7
          # BEGIN Other architectures
          - goos: linux
            goarch: arm64
          - goos: linux
            goarch: riscv64
          # BEGIN MIPS
          - goos: linux
            goarch: mips64
          - goos: linux
            goarch: mips64le
          - goos: linux
            goarch: mipsle
          - goos: linux
            goarch: mips
          # END MIPS
          # BEGIN Android
          - goos: android
            goarch: arm64
          # END Android
          # END Other architectures
      fail-fast: false

    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}
      CGO_ENABLED: 0

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          repository: v2fly/v2ray-core
          path: v2ray-core
          fetch-depth: 1

      - name: Show workflow information
        id: get_filename
        run: |
          export _NAME=$(jq ".[\"$GOOS-$GOARCH$GOARM\"].friendlyName" -r < release/friendly-filenames.json)
          echo "GOOS: $GOOS, GOARCH: $GOARCH, GOARM: $GOARM, RELEASE_NAME: $_NAME"
          echo "::set-output name=ASSET_NAME::$_NAME"
          echo "ASSET_NAME=$_NAME" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15.6

      - name: Get project dependencies
        run: go mod download

      - name: Build V2Ray
        run: |
          mkdir -p build_assets
          go build -v -o build_assets/v2ray -trimpath -ldflags "-s -w -buildid=" ./main
          upx -q -9 build_assets/v2ray -o build_assets/v2ray
          go build -v -o build_assets/v2ctl -trimpath -ldflags "-s -w -buildid=" -tags confonly ./infra/control/main
          upx -q -9 build_assets/v2ctl -o build_assets/v2ctl
      - name: Build Windows wv2ray
        if: matrix.goos == 'windows'
        run: |
          echo "::warning ::wv2ray.exe will be removed in v5"
          go build -v -o build_assets/wv2ray.exe -trimpath -ldflags "-s -w -H windowsgui -buildid=" ./main
          cd ./build_assets || exit 1
          upx -q -9 v2ray -o v2ray.exe
          upx -q -9 v2ctl -o v2ctl.exe
      - name: Prepare package
        run: cp -v ./release/config/*.* ./build_assets

      - name: Prepare package for Linux
        if: matrix.goos == 'linux'
        run: cp -rv ./release/config/systemd ./build_assets/

      - name: Create ZIP archive
        run: |
          pushd build_assets || exit 1
          zip -9vr ../v2ray-$ASSET_NAME.zip .
          popd || exit 1
          FILE=./v2ray-$ASSET_NAME.zip
          DGST=$FILE.dgst
          openssl dgst -md5    $FILE | sed 's/([^)]*)//g' >>$DGST
          openssl dgst -sha1   $FILE | sed 's/([^)]*)//g' >>$DGST
          openssl dgst -sha256 $FILE | sed 's/([^)]*)//g' >>$DGST
          openssl dgst -sha512 $FILE | sed 's/([^)]*)//g' >>$DGST
      - name: Upload ZIP file to Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: v2ray-${{ steps.get_filename.outputs.ASSET_NAME }}.zip
          path: v2ray-${{ steps.get_filename.outputs.ASSET_NAME }}.zip
